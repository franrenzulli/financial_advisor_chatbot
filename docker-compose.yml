services:
  # Servicio Frontend (React)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Puerto estándar de React
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=http://localhost:8000 # Para acceso desde el navegador
    volumes:
      - ./frontend:/app # Para hot reload en desarrollo
      - /app/node_modules # Evita conflictos con node_modules

  # Servicio API (FastAPI)
  api:
    build: 
      context: ./backend/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - rag
    environment:
      - RAG_SERVICE_URL=http://rag:8001 # URL interna para comunicación entre servicios
    volumes:
      - ./backend/api:/app # Para desarrollo
      - ./backend/vector-store:/app/vector-store # Acceso compartido a la base vectorial

  # Servicio RAG
  rag:
    build: 
      context: ./backend/rag
      dockerfile: Dockerfile
    ports:
      - "8001:8001" # Puerto diferente para evitar conflictos
    env_file:
      - .env
    volumes:
      - ./backend/rag:/app # Para desarrollo
      - ./backend/vector-store:/app/vector-store # Acceso compartido a la base vectorial
    environment:
      - VECTOR_STORE_PATH=/app/vector-store

  # Servicio de Ingestion (se ejecuta una vez y se detiene)
  ingestion:
    build: 
      context: ./backend/llm
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend/llm:/app
      - ./backend/llm/vector-store:/app/vector-store # Donde guardará los vectores
    environment:
      - VECTOR_STORE_PATH=/app/vector-store
    # Este servicio se ejecuta una vez y termina
    restart: "no"
    profiles:
      - ingestion # Solo se ejecuta cuando se especifica este perfil

networks:
  default:
    driver: bridge